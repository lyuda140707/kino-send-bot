import os
import logging
import asyncio
import random
from datetime import datetime
import pytz
from aiogram.client.default import DefaultBotProperties

from aiogram import Bot
from aiogram.enums import ParseMode

import gspread
from oauth2client.service_account import ServiceAccountCredentials
from dotenv import load_dotenv
import json

load_dotenv()

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
BOT_TOKEN = os.getenv("BOT_TOKEN")
SHEET_ID = os.getenv("SHEET_ID")
CHANNEL_USERNAMES = ["@KinoTochkaUA", "@KinoTochkaFilms"]
TIMEZONE = "Europe/Kyiv"

# –°–ø–∏—Å–æ–∫ –≤–∏–ø–∞–¥–∫–æ–≤–∏—Ö –ø—ñ–¥–ø–∏—Å—ñ–≤
FOOTERS = [
    "üé¨ –£ –Ω–∞—Å –∑–∞–≤–∂–¥–∏ —î —â–æ –ø–æ–¥–∏–≤–∏—Ç–∏—Å—å ‚Äî —Å–ª—ñ–¥–∫—É–π!",
    "‚ú® –ö—ñ–Ω–æ –∫–æ–∂–Ω–æ–≥–æ –¥–Ω—è ‚Äî –∑–∞–ª–∏—à–∞–π—Å—è –∑ –Ω–∞–º–∏!",
    "üé• –ü—ñ–¥–ø–∏—à–∏—Å—å, —â–æ–± –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–∏ –Ω–æ–≤–∏–Ω–∫–∏!",
    "üçø –ù–∞—Å–æ–ª–æ–¥–∂—É–π—Å—è –∫—ñ–Ω–æ ‚Äî –±—ñ–ª—å—à–µ —Ü—ñ–∫–∞–≤–æ–≥–æ –≤–∂–µ —Å–∫–æ—Ä–æ!",
    "üîé –ó –Ω–∞–º–∏ –∑–Ω–∞–π–¥–µ—à, —â–æ –ø–æ–¥–∏–≤–∏—Ç–∏—Å—å!",
]

# –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–æ—Ç–∞
bot = Bot(
    token=BOT_TOKEN,
    default=DefaultBotProperties(parse_mode=ParseMode.HTML)
)

# Google Sheets –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è
def get_sheet():
    scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
    creds_data = os.getenv("GOOGLE_SHEETS_CREDENTIALS_JSON")
    creds = ServiceAccountCredentials.from_json_keyfile_dict(json.loads(creds_data), scope)
    client = gspread.authorize(creds)
    return client.open_by_key(SHEET_ID).sheet1

async def check_and_post():
    
    while True:
        try:
            sheet = get_sheet()
            rows = sheet.get_all_records()
            for idx, row in enumerate(rows, start=2):
                status = row.get("E (–°—Ç–∞—Ç—É—Å)", "")
                dt_str = row.get("B (–î–∞—Ç–∞ —ñ —á–∞—Å)", "")
                text = row.get("A (–¢–µ–∫—Å—Ç)", "")
                media_url = row.get("D ‚Äî –ü—Ä—è–º–∏–π –ª—ñ–Ω–∫ (—Ñ–æ—Ä–º—É–ª–∞)", "")

                if not status and dt_str and text:
                    tz = pytz.timezone(TIMEZONE)
                    dt = tz.localize(datetime.strptime(dt_str, "%Y-%m-%d %H:%M"))
                    now = datetime.now(tz)

                    if dt <= now:
                        footer = random.choice(FOOTERS)
                        final_text = f"{text}\n\n{footer}"

                        for channel in CHANNEL_USERNAMES:
                            if media_url.startswith(("BAAC", "BQAC", "CAAC")):
                                await bot.send_video(chat_id=channel, video=media_url, caption=final_text)
                            elif media_url.endswith((".jpg", ".jpeg", ".png", ".webp")):
                                await bot.send_photo(chat_id=channel, photo=media_url, caption=final_text)
                            elif media_url.endswith((".mp4", ".mov", ".mkv")):
                                await bot.send_video(chat_id=channel, video=media_url, caption=final_text)
                            else:
                                await bot.send_message(chat_id=channel, text=final_text)

                        sheet.update_cell(idx, 5, "‚úÖ")

        except Exception as e:
            logging.error(f"–ü–æ–º–∏–ª–∫–∞: {e}")

        await asyncio.sleep(60)
        
if __name__ == "__main__":
    asyncio.run(check_and_post())
